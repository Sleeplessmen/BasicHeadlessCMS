module.exports = async function seedAdminPermissions() {
    console.time("SeedAdminPermissions");
    sails.log("üîß ƒêang ch·∫°y seedAdminPermissions.js...");

    const permissionsToSeed = [
        // ADMIN USERS
        ["read", "user", "Xem danh s√°ch v√† th√¥ng tin ng∆∞·ªùi d√πng"],
        ["create", "user", "T·∫°o ng∆∞·ªùi d√πng m·ªõi"],
        ["update", "user", "C·∫≠p nh·∫≠t th√¥ng tin ng∆∞·ªùi d√πng"],
        ["delete", "user", "Xo√° ho·∫∑c v√¥ hi·ªáu ho√° ng∆∞·ªùi d√πng"],

        // ADMIN ROLES
        ["read", "role", "Xem danh s√°ch v√† chi ti·∫øt vai tr√≤"],
        ["create", "role", "T·∫°o vai tr√≤ m·ªõi"],
        ["update", "role", "C·∫≠p nh·∫≠t t√™n, m√¥ t·∫£ vai tr√≤"],
        ["delete", "role", "Xo√° vai tr√≤"],

        // ADMIN PERMISSIONS
        ["read", "permission", "Xem danh s√°ch quy·ªÅn h·ªá th·ªëng"],

        // // CONTENT-TYPE
        // ["read", "content-type", "Xem danh s√°ch v√† c·∫•u tr√∫c lo·∫°i n·ªôi dung"],
        // ["create", "content-type", "T·∫°o lo·∫°i n·ªôi dung m·ªõi (v√≠ d·ª•: Blog, FAQ)"],
        // ["update", "content-type", "Ch·ªânh s·ª≠a field, schema c·ªßa lo·∫°i n·ªôi dung"],
        // ["delete", "content-type", "Xo√° lo·∫°i n·ªôi dung"],

        // // CONTENT-ENTRY
        // ["read", "content-entry", "Xem danh s√°ch v√† chi ti·∫øt b·∫£n ghi n·ªôi dung"],
        // ["create", "content-entry", "T·∫°o b·∫£n ghi m·ªõi trong lo·∫°i n·ªôi dung"],
        // ["update", "content-entry", "Ch·ªânh s·ª≠a b·∫£n ghi n·ªôi dung"],
        // ["delete", "content-entry", "Xo√° b·∫£n ghi n·ªôi dung"],
        // [
        //     "export",
        //     "content-entry",
        //     "Xu·∫•t d·ªØ li·ªáu n·ªôi dung ra file (Excel, CSV)",
        // ],

        // // ASSET
        // ["read", "asset", "Xem danh s√°ch file ƒë√£ upload"],
        // ["create", "asset", "Upload file m·ªõi (h√¨nh ·∫£nh, t√†i li·ªáu)"],
        // ["delete", "asset", "Xo√° file"],
    ];

    try {
        let createdCount = 0;

        for (const [action, resource, description] of permissionsToSeed) {
            const formatted = {
                action: `admin::${resource}.${action}`,
                subject: `admin::${resource}`,
                description,
            };

            const existing = await AdminPermission.findOne({
                action: formatted.action,
                subject: formatted.subject,
            });

            if (!existing) {
                await AdminPermission.create(formatted);
                createdCount++;
                sails.log(`‚úÖ T·∫°o m·ªõi permission: ${formatted.action}`);
            } else if (existing.description !== formatted.description) {
                await AdminPermission.updateOne({ id: existing.id }).set({
                    description: formatted.description,
                });
                sails.log(`‚úèÔ∏è C·∫≠p nh·∫≠t m√¥ t·∫£: ${formatted.action}`);
            } else {
                sails.log(`‚è© B·ªè qua (ƒë√£ t·ªìn t·∫°i): ${formatted.action}`);
            }
        }

        sails.log(
            `üéâ SeedAdminPermissions ho√†n t·∫•t. ƒê√£ th√™m m·ªõi ${createdCount} admin panel permission.`,
        );
    } catch (err) {
        sails.log.error(
            "‚ùå L·ªói khi seed admin panel permissions:",
            err.message || err,
        );
        throw err;
    } finally {
        console.timeEnd("SeedAdminPermissions");
    }
};
