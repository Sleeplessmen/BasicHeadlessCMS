module.exports = async function seedPermissions() {
    console.time("SeedPermissions");
    sails.log("üîß ƒêang ch·∫°y seedPermissions.js...");

    const permissionsToSeed = [
        // USER
        {
            action: "read",
            resource: "user",
            description: "Xem danh s√°ch v√† th√¥ng tin ng∆∞·ªùi d√πng",
        },
        {
            action: "create",
            resource: "user",
            description: "T·∫°o ng∆∞·ªùi d√πng m·ªõi",
        },
        {
            action: "update",
            resource: "user",
            description: "C·∫≠p nh·∫≠t th√¥ng tin ng∆∞·ªùi d√πng",
        },
        {
            action: "delete",
            resource: "user",
            description: "Xo√° ho·∫∑c v√¥ hi·ªáu ho√° ng∆∞·ªùi d√πng",
        },
        {
            action: "assign-role",
            resource: "user",
            description: "G√°n vai tr√≤ cho ng∆∞·ªùi d√πng",
        },

        // ROLE
        {
            action: "read",
            resource: "role",
            description: "Xem danh s√°ch v√† chi ti·∫øt vai tr√≤",
        },
        {
            action: "create",
            resource: "role",
            description: "T·∫°o vai tr√≤ m·ªõi",
        },
        {
            action: "update",
            resource: "role",
            description: "C·∫≠p nh·∫≠t t√™n, m√¥ t·∫£ vai tr√≤",
        },
        {
            action: "delete",
            resource: "role",
            description: "Xo√° vai tr√≤",
        },
        {
            action: "assign-permission",
            resource: "role",
            description: "G√°n ho·∫∑c b·ªè quy·ªÅn cho vai tr√≤",
        },

        // PERMISSION
        {
            action: "read",
            resource: "permission",
            description: "Xem danh s√°ch quy·ªÅn h·ªá th·ªëng",
        },
        {
            action: "create",
            resource: "permission",
            description: "T·∫°o quy·ªÅn m·ªõi (ch·ªâ admin h·ªá th·ªëng)",
        },
        {
            action: "update",
            resource: "permission",
            description: "C·∫≠p nh·∫≠t quy·ªÅn",
        },
        { action: "delete", resource: "permission", description: "Xo√° quy·ªÅn" },

        // CONTENT-TYPE
        {
            action: "read",
            resource: "content-type",
            description: "Xem danh s√°ch v√† c·∫•u tr√∫c lo·∫°i n·ªôi dung",
        },
        {
            action: "create",
            resource: "content-type",
            description: "T·∫°o lo·∫°i n·ªôi dung m·ªõi (v√≠ d·ª•: Blog, FAQ)",
        },
        {
            action: "update",
            resource: "content-type",
            description: "Ch·ªânh s·ª≠a field, schema c·ªßa lo·∫°i n·ªôi dung",
        },
        {
            action: "delete",
            resource: "content-type",
            description: "Xo√° lo·∫°i n·ªôi dung",
        },

        // CONTENT-ENTRY
        {
            action: "read",
            resource: "content-entry",
            description: "Xem danh s√°ch v√† chi ti·∫øt b·∫£n ghi n·ªôi dung",
        },
        {
            action: "create",
            resource: "content-entry",
            description: "T·∫°o b·∫£n ghi m·ªõi trong lo·∫°i n·ªôi dung",
        },
        {
            action: "update",
            resource: "content-entry",
            description: "Ch·ªânh s·ª≠a b·∫£n ghi n·ªôi dung",
        },
        {
            action: "delete",
            resource: "content-entry",
            description: "Xo√° b·∫£n ghi n·ªôi dung",
        },
        {
            action: "export",
            resource: "content-entry",
            description: "Xu·∫•t d·ªØ li·ªáu n·ªôi dung ra file (Excel, CSV)",
        },

        // ASSET
        {
            action: "read",
            resource: "asset",
            description: "Xem danh s√°ch file ƒë√£ upload",
        },
        {
            action: "create",
            resource: "asset",
            description: "Upload file m·ªõi (h√¨nh ·∫£nh, t√†i li·ªáu)",
        },
        { action: "delete", resource: "asset", description: "Xo√° file" },
    ];

    try {
        let createdCount = 0;
        for (let p of permissionsToSeed) {
            const existing = await Permission.findOne({
                action: p.action,
                resource: p.resource,
            });
            if (!existing) {
                await Permission.create(p);
                createdCount++;
                sails.log(`‚úÖ T·∫°o m·ªõi permission: ${p.action} ${p.resource}`);
            } else {
                // C√≥ th·ªÉ update description n·∫øu mu·ªën
                if (existing.description !== p.description) {
                    await Permission.updateOne({ id: existing.id }).set({
                        description: p.description,
                    });
                    sails.log(
                        `‚úèÔ∏è C·∫≠p nh·∫≠t m√¥ t·∫£ cho permission: ${p.action} ${p.resource}`
                    );
                } else {
                    sails.log(
                        `‚è© B·ªè qua (ƒë√£ t·ªìn t·∫°i): ${p.action} ${p.resource}`
                    );
                }
            }
        }

        sails.log(
            `üéâ SeedPermissions ho√†n t·∫•t. ƒê√£ th√™m m·ªõi ${createdCount} permission.`
        );
    } catch (err) {
        sails.log.error("‚ùå L·ªói khi seed permissions:", err.message || err);
        throw err;
    } finally {
        console.timeEnd("SeedPermissions");
    }
};
